Remove X
Send Feedback
Given a string, compute recursively a new string where all 'x' chars have been removed.
Input format :
String S
Output format :
Modified String
Constraints :
1 <= |S| <= 10^3
where |S| represents the length of string S. 
Sample Input 1 :
xaxb
Sample Output 1:
ab
Sample Input 2 :
abc
Sample Output 2:
abc
Sample Input 3 :
xx
Sample Output 3:

// Change in the given string itself. So no need to return or print anything
#include<cstring>
void removeX(char input[]) {
    if(strlen(input) == 0){
        return;
    }
 //    char x;
    // int a = 0;
 // if('x' != input[0]){
 //     input[0] = input[0];
 //     // a++;
 // }
    removeX(input+1);
    // if('x' != input[0]){
    // input[0] = input[0];
     // a++;
 
     if(input[0]=='x')
  { 
  //	input[0]=' ';
  	for(int i=0;input[i]!='\0';i++)
  	{
  		input[i]=input[i+1];
  	}
  }
    


}

// Main Code:

#include <iostream>
#include "solution.h"
using namespace std;

int main() {
    char input[100];
    cin.getline(input, 100);
    removeX(input);
    cout << input << endl;
}
